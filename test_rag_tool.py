"""
Teste da ferramenta RAG integrada a um agente CrewAI
"""
import os
from dotenv import load_dotenv
from crewai import Agent, Task, Crew, LLM
# import chromadb

# persist_directory = os.path.join(os.path.dirname(__file__), 'chroma_db')
# chroma_client = chromadb.PersistentClient(path=persist_directory)

# collection = chroma_client.create_collection("garcia_clinic")

# print(f"üìä Cole√ß√£o RAG carregada para o teste {collection}")

from src.tools.rag import RagTool

load_dotenv()

# Configura√ß√£o do LLM (ajuste conforme necess√°rio)
llm = LLM(
    model="together_ai/meta-llama/Llama-3.3-70B-Instruct-Turbo",
    api_key=os.environ.get("TOGETHER_API_KEY"),
    base_url="https://api.together.xyz/v1"
)

# Inst√¢ncia da ferramenta RAG
rag_tool = RagTool()

# Agente especializado em atendimento da cl√≠nica
tagente = Agent(
    name='AtendimentoAgent',
    role='Assistente de Atendimento da Cl√≠nica Dr. Garcia',
    goal='Fornecer informa√ß√µes precisas sobre a cl√≠nica usando a base de conhecimento.',
    backstory='Voc√™ √© um assistente virtual especializado em atendimento ao paciente da Cl√≠nica Dr. Garcia. Use sempre a base de conhecimento para fornecer informa√ß√µes precisas.',
    verbose=True,
    tools=[rag_tool],
    llm=llm,
)

def test_rag_agent():
    """Testa a ferramenta RAG na perspectiva de um agente CrewAI"""
    print("üß™ Testando ferramenta RAG via agente CrewAI...")

    test_queries = [
        "Quais s√£o os hor√°rios de funcionamento da cl√≠nica?",
        # "Onde fica localizada a cl√≠nica?",
        # "Quais especialidades s√£o oferecidas?",
        # "Qual o perfil profissional do Dr. Garcia?",
        # "Qual √© o CRM do Dr. Garcia?",
        # "Qual √© a forma√ß√£o acad√™mica do Dr. Garcia?",
        # "Quais s√£o os servi√ßos oferecidos pela cl√≠nica?"
    ]

    for query in test_queries:
        print(f"\nüìù Consulta: {query}")
        task = Task(
            description=query,
            expected_output="Informa√ß√£o precisa e clara sobre a cl√≠nica.",
            agent=tagente
        )
        crew = Crew(
            agents=[tagente],
            tasks=[task],
            verbose=True
        )
        result = crew.kickoff()
        print(f"üí¨ Resultado: {result}")
        print("-" * 80)

if __name__ == "__main__":
    test_rag_agent()
